<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.github.taybct</groupId>
        <artifactId>spring-taybct</artifactId>
        <version>3.5.0</version>
    </parent>

    <artifactId>run</artifactId>
    <name>${project.artifactId}</name>
    <packaging>jar</packaging>
    <description>可执行 jar</description>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!--基础模块-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-core</artifactId>
        </dependency>

        <!--easyexcel poi 操作导入导出 excel-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easyexcel.version}</version>
        </dependency>
        <!-- easypoi的支持 -->
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>${easypoi.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-web</artifactId>
            <version>${easypoi.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-annotation</artifactId>
            <version>${easypoi.version}</version>
        </dependency>
        <!--excel模板导出-->
        <dependency>
            <groupId>net.sf.jxls</groupId>
            <artifactId>jxls-core</artifactId>
            <version>${jxls-core.version}</version>
        </dependency>

        <!--鉴权-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-auth</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--系统-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-module-system</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--流程管理-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-module-lf</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--日志管理-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-admin-log</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--rabbit-mq-->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>-->

        <!--任务调度模块-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-module-scheduling</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--es 操作-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
            <version>${spring-boot.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>


        <!--文件管理-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-admin-file</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--短信-->

        <!--微信模块-->
        <!--<dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-wechat</artifactId>
        </dependency>-->

        <!--jdbc 驱动-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!--    postgresql 驱动   -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- Mysql 驱动 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql-connector-j.version}</version>
        </dependency>

        <!--oracle驱动-->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>${ojdbc.version}</version>
        </dependency>

        <!--oracle字符集支持-->
        <dependency>
            <groupId>com.oracle.database.nls</groupId>
            <artifactId>orai18n</artifactId>
            <version>${orai18n.version}</version>
        </dependency>

        <!-- Druid 连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-3-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!-- Dynamic DataSource 多数据源 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
            <version>${dynamic-datasource.version}</version>
        </dependency>

        <!--PKI 登录-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-pki</artifactId>
        </dependency>

        <!--mvc websocket-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <!--使用 undertow 替代 tomcat-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-module-online-doc</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--knife4j 集成 springdoc-openapi（修复兼容 springdoc-openapi 2.7.x 以上版本）-->
        <dependency>
            <groupId>io.github.mangocrisp</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>${knife4j-fix.version}</version>
        </dependency>

        <!-- springdoc-openapi 核心依赖（包含 OpenAPI 3 规范生成和 Swagger UI） -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!--suppress UnresolvedMavenProperty -->
                                <copy overwrite="true"
                                      tofile="${maven.multiModuleProjectDirectory}/target/${project.build.finalName}.jar"
                                      file="${project.build.directory}/${project.build.finalName}.jar"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 构建和推动Docker镜像 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <!--如果package时不想用docker打包,就注释掉这个goal-->
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>