<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.github.taybct</groupId>
        <artifactId>spring-taybct</artifactId>
        <version>3.5.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.taybct</groupId>
    <artifactId>spring-taybct-auth</artifactId>
    <version>3.5.0</version>
    <name>${project.artifactId}</name>
    <packaging>jar</packaging>
    <description>认证，授权服务</description>
    <url>https://github.com/taybct/spring-taybct</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <organization>
        <name>io.github.taybct</name>
        <url>https://github.com/taybct</url>
    </organization>

    <developers>
        <developer>
            <id>crisp</id>
            <name>Mango Crisp</name>
            <email>15014633363@163.com</email>
            <url>https://mangocrisp.github.io</url>
            <roles>
                <role>Project Manager</role>
                <role>Architect</role>
            </roles>
            <organization>io.github.taybct</organization>
            <organizationUrl>https://github.com/taybct</organizationUrl>
            <timezone>Asia/Shanghai</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/taybct/spring-taybct.git</connection>
        <developerConnection>scm:git:https://github.com/taybct/spring-taybct.git</developerConnection>
        <url>https://github.com/taybct/spring-taybct</url>
    </scm>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!--启动模块-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-launch</artifactId>
        </dependency>

        <!--微服务依赖-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-cloud</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--系统接口-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-api-system</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--Redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- 常量工具 -->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 必须引入-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <!-- OAuth2 认证服务器-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-authorization-server</artifactId>
            <version>${spring-security-oauth2-authorization-server.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
            <version>${spring-security-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
            <version>${spring-security-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
            <version>${spring-security-core.version}</version>
        </dependency>

        <!--安全工具-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-security</artifactId>
        </dependency>

        <!-- thymeleaf 模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!--jdbc 驱动-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>${spring-boot.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--    postgresql 驱动   -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- Mysql 驱动 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql-connector-j.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--oracle驱动-->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>${ojdbc.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--oracle字符集支持-->
        <dependency>
            <groupId>com.oracle.database.nls</groupId>
            <artifactId>orai18n</artifactId>
            <version>${orai18n.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- Druid 连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-3-starter</artifactId>
            <version>${druid.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- Dynamic DataSource 多数据源 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
            <version>${dynamic-datasource.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--rabbit-mq-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <version>${spring-boot.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--任务调度 用于清除刷新 token 超时的鉴权-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-scheduling</artifactId>
        </dependency>

        <!--PKI 登录-->
        <dependency>
            <groupId>io.github.taybct</groupId>
            <artifactId>spring-taybct-tool-pki</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!--knife4j 集成 springdoc-openapi（修复兼容 springdoc-openapi 2.7.x 以上版本）-->
        <dependency>
            <groupId>io.github.mangocrisp</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>${knife4j-fix.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- springdoc-openapi 核心依赖（包含 OpenAPI 3 规范生成和 Swagger UI） -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- SpringBoot Actuator 端点通过 JMX 和HTTP 公开暴露给外界访问-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <!-- SpringBoot Admin Client 客户端 -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--设置该模块及子模块不需要被打包成jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <finalName>${project.name}</finalName>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
